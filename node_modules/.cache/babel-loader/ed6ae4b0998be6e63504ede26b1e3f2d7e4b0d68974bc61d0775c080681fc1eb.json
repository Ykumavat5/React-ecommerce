{"ast":null,"code":"var _jsxFileName = \"/home/hlink/Desktop/React/react-project/organic/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './pages/Dashboard';\nimport Error from './pages/Error';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/authentication/Login';\nimport { useState } from 'react';\n\n// import { Swiper, SwiperSlide } from 'swiper/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Dashboard","Error","Routes","Route","Navigate","Login","useState","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hlink/Desktop/React/react-project/organic/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './pages/Dashboard';\nimport Error from './pages/Error';\nimport { Routes, Route,Navigate } from 'react-router-dom';\nimport Login from './components/authentication/Login';\nimport { useState } from 'react';\n\n// import { Swiper, SwiperSlide } from 'swiper/react';\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <Routes>\n        <Route \n          path=\"/\" \n          element={\n            isLoggedIn ? <Dashboard /> : <Navigate to=\"/login\" />\n          } \n        />\n        <Route \n          path=\"/login\" \n          element={<Login onLogin={handleLogin} />} \n        />\n        <Route path=\"*\" element={<Error />} />\n      </Routes> */}\n{/* \n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"*\" element={<Error />} />\n      </Routes> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,MAAM,EAAEC,KAAK,EAACC,QAAQ,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,mCAAmC;AACrD,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAAKM,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmBf,CAAC;AAEV;AAACR,EAAA,CA9BQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}